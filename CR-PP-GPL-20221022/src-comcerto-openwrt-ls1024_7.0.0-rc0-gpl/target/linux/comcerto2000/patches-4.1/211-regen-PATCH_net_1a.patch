From 3b502f5781fc8f30d90623c8832f9e83b9ab7ddc Mon Sep 17 00:00:00 2001
From: Ganesh Reddy <ganesh.reddy@nxp.com>
Date: Thu, 4 Jul 2019 16:47:28 +0530
Subject: [PATCH] Regenerated patch from the original PATCH_net_1a.patch part
 of CVE-2019-11477

This patch is appliying as per CVE-2019-11477 (https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-001.md)
Original patch reference is:
  https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-001/PATCH_net_1a.patch
It is tuned as per current Linux kernel in our ASK-7.1.1.

Signed-off-by: Ganesh Reddy <ganesh.reddy@nxp.com>
---
 net/ipv4/tcp_input.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/net/ipv4/tcp_input.c b/net/ipv4/tcp_input.c
index 72de473..72ce91c 100644
--- a/net/ipv4/tcp_input.c
+++ b/net/ipv4/tcp_input.c
@@ -1401,6 +1401,7 @@ static struct sk_buff *tcp_shift_skb_data(struct sock *sk, struct sk_buff *skb,
 	struct tcp_sock *tp = tcp_sk(sk);
 	struct sk_buff *prev;
 	int mss;
+	int next_pcount;
 	int pcount = 0;
 	int len;
 	int in_sack;
@@ -1521,9 +1522,16 @@ static struct sk_buff *tcp_shift_skb_data(struct sock *sk, struct sk_buff *skb,
 		tcp_shifted_skb(sk, skb, state, tcp_skb_pcount(skb), len, mss, 0);
 	}
 */
+/*
 	pcount = tcp_skb_pcount(skb);
 	if (tcp_skb_shift(prev, skb, pcount, len))
 		tcp_shifted_skb(sk, prev, skb, state, pcount, len, mss, 0);
+*/
+	next_pcount = tcp_skb_pcount(skb);
+	if (tcp_skb_shift(prev, skb, next_pcount, len)) {
+		pcount += next_pcount;
+		tcp_shifted_skb(sk, skb, state, next_pcount, len, mss, 0);
+	}
 out:
 	state->fack_count += pcount;
 	return prev;
-- 
1.9.1

